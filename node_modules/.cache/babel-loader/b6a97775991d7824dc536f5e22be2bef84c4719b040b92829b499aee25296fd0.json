{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/Mariam/Desktop/project github/Game project/app1/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Mariam/Desktop/project github/Game project/app1/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _possibleConstructorReturn = require(\"C:/Users/Mariam/Desktop/project github/Game project/app1/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\").default;\nvar _inherits = require(\"C:/Users/Mariam/Desktop/project github/Game project/app1/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Mariam/Desktop/project github/Game project/app1/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n/*!\n  * Bootstrap swipe.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./config'), require('../dom/event-handler'), require('./index')) : typeof define === 'function' && define.amd ? define(['./config', '../dom/event-handler', './index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swipe = factory(global.Config, global.EventHandler, global.Index));\n})(this, function (Config, EventHandler, index) {\n  'use strict';\n\n  var _interopDefaultLegacy = function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      default: e\n    };\n  };\n  var Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): util/swipe.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  var NAME = 'swipe';\n  var EVENT_KEY = '.bs.swipe';\n  var EVENT_TOUCHSTART = \"touchstart\".concat(EVENT_KEY);\n  var EVENT_TOUCHMOVE = \"touchmove\".concat(EVENT_KEY);\n  var EVENT_TOUCHEND = \"touchend\".concat(EVENT_KEY);\n  var EVENT_POINTERDOWN = \"pointerdown\".concat(EVENT_KEY);\n  var EVENT_POINTERUP = \"pointerup\".concat(EVENT_KEY);\n  var POINTER_TYPE_TOUCH = 'touch';\n  var POINTER_TYPE_PEN = 'pen';\n  var CLASS_NAME_POINTER_EVENT = 'pointer-event';\n  var SWIPE_THRESHOLD = 40;\n  var Default = {\n    endCallback: null,\n    leftCallback: null,\n    rightCallback: null\n  };\n  var DefaultType = {\n    endCallback: '(function|null)',\n    leftCallback: '(function|null)',\n    rightCallback: '(function|null)'\n  };\n  /**\n   * Class definition\n   */\n  var Swipe = /*#__PURE__*/function (_Config__default$defa) {\n    _inherits(Swipe, _Config__default$defa);\n    var _super = _createSuper(Swipe);\n    function Swipe(element, config) {\n      var _this;\n      _classCallCheck(this, Swipe);\n      _this = _super.call(this);\n      _this._element = element;\n      if (!element || !Swipe.isSupported()) {\n        return _possibleConstructorReturn(_this);\n      }\n      _this._config = _this._getConfig(config);\n      _this._deltaX = 0;\n      _this._supportPointerEvents = Boolean(window.PointerEvent);\n      _this._initEvents();\n      return _this;\n    } // Getters\n    _createClass(Swipe, [{\n      key: \"dispose\",\n      value:\n      // Public\n\n      function dispose() {\n        EventHandler__default.default.off(this._element, EVENT_KEY);\n      } // Private\n    }, {\n      key: \"_start\",\n      value: function _start(event) {\n        if (!this._supportPointerEvents) {\n          this._deltaX = event.touches[0].clientX;\n          return;\n        }\n        if (this._eventIsPointerPenTouch(event)) {\n          this._deltaX = event.clientX;\n        }\n      }\n    }, {\n      key: \"_end\",\n      value: function _end(event) {\n        if (this._eventIsPointerPenTouch(event)) {\n          this._deltaX = event.clientX - this._deltaX;\n        }\n        this._handleSwipe();\n        index.execute(this._config.endCallback);\n      }\n    }, {\n      key: \"_move\",\n      value: function _move(event) {\n        this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;\n      }\n    }, {\n      key: \"_handleSwipe\",\n      value: function _handleSwipe() {\n        var absDeltaX = Math.abs(this._deltaX);\n        if (absDeltaX <= SWIPE_THRESHOLD) {\n          return;\n        }\n        var direction = absDeltaX / this._deltaX;\n        this._deltaX = 0;\n        if (!direction) {\n          return;\n        }\n        index.execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);\n      }\n    }, {\n      key: \"_initEvents\",\n      value: function _initEvents() {\n        var _this2 = this;\n        if (this._supportPointerEvents) {\n          EventHandler__default.default.on(this._element, EVENT_POINTERDOWN, function (event) {\n            return _this2._start(event);\n          });\n          EventHandler__default.default.on(this._element, EVENT_POINTERUP, function (event) {\n            return _this2._end(event);\n          });\n          this._element.classList.add(CLASS_NAME_POINTER_EVENT);\n        } else {\n          EventHandler__default.default.on(this._element, EVENT_TOUCHSTART, function (event) {\n            return _this2._start(event);\n          });\n          EventHandler__default.default.on(this._element, EVENT_TOUCHMOVE, function (event) {\n            return _this2._move(event);\n          });\n          EventHandler__default.default.on(this._element, EVENT_TOUCHEND, function (event) {\n            return _this2._end(event);\n          });\n        }\n      }\n    }, {\n      key: \"_eventIsPointerPenTouch\",\n      value: function _eventIsPointerPenTouch(event) {\n        return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);\n      } // Static\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME;\n      }\n    }, {\n      key: \"isSupported\",\n      value: function isSupported() {\n        return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n      }\n    }]);\n    return Swipe;\n  }(Config__default.default);\n  return Swipe;\n});","map":{"version":3,"mappings":"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","names":["NAME","EVENT_KEY","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","POINTER_TYPE_TOUCH","POINTER_TYPE_PEN","CLASS_NAME_POINTER_EVENT","SWIPE_THRESHOLD","Default","endCallback","leftCallback","rightCallback","DefaultType","Swipe","constructor","element","config","_element","isSupported","_config","_getConfig","_deltaX","_supportPointerEvents","Boolean","window","PointerEvent","_initEvents","dispose","EventHandler","off","_start","event","touches","clientX","_eventIsPointerPenTouch","_end","_handleSwipe","execute","_move","length","absDeltaX","Math","abs","direction","on","classList","add","pointerType","document","documentElement","navigator","maxTouchPoints","Config"],"sources":["C:\\Users\\Mariam\\Desktop\\project github\\Game project\\app1\\node_modules\\bootstrap\\js\\src\\util\\swipe.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Config from './config'\nimport EventHandler from '../dom/event-handler'\nimport { execute } from './index'\n\n/**\n * Constants\n */\n\nconst NAME = 'swipe'\nconst EVENT_KEY = '.bs.swipe'\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst POINTER_TYPE_TOUCH = 'touch'\nconst POINTER_TYPE_PEN = 'pen'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  endCallback: null,\n  leftCallback: null,\n  rightCallback: null\n}\n\nconst DefaultType = {\n  endCallback: '(function|null)',\n  leftCallback: '(function|null)',\n  rightCallback: '(function|null)'\n}\n\n/**\n * Class definition\n */\n\nclass Swipe extends Config {\n  constructor(element, config) {\n    super()\n    this._element = element\n\n    if (!element || !Swipe.isSupported()) {\n      return\n    }\n\n    this._config = this._getConfig(config)\n    this._deltaX = 0\n    this._supportPointerEvents = Boolean(window.PointerEvent)\n    this._initEvents()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  dispose() {\n    EventHandler.off(this._element, EVENT_KEY)\n  }\n\n  // Private\n  _start(event) {\n    if (!this._supportPointerEvents) {\n      this._deltaX = event.touches[0].clientX\n\n      return\n    }\n\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX\n    }\n  }\n\n  _end(event) {\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX - this._deltaX\n    }\n\n    this._handleSwipe()\n    execute(this._config.endCallback)\n  }\n\n  _move(event) {\n    this._deltaX = event.touches && event.touches.length > 1 ?\n      0 :\n      event.touches[0].clientX - this._deltaX\n  }\n\n  _handleSwipe() {\n    const absDeltaX = Math.abs(this._deltaX)\n\n    if (absDeltaX <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltaX / this._deltaX\n\n    this._deltaX = 0\n\n    if (!direction) {\n      return\n    }\n\n    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback)\n  }\n\n  _initEvents() {\n    if (this._supportPointerEvents) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event))\n      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event))\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event))\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event))\n    }\n  }\n\n  _eventIsPointerPenTouch(event) {\n    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)\n  }\n\n  // Static\n  static isSupported() {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n  }\n}\n\nexport default Swipe\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}